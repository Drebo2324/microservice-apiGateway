version: '3.8'
services:
  keycloak-mysql:
    container_name: keycloak-mysql
    image: mysql:9.0
    volumes:
      - ./volume-data/mysql_keycloak_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootPassword
      MYSQL_DATABASE: keycloakDb
      MYSQL_USER: admin
      MYSQL_PASSWORD: password

  keycloak:
    container_name: keycloak
    image: keycloak/keycloak:26.0
    command: [ "start-dev", "--import-realm" ] #start in development mode -> import realm configs in provided directory
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: keycloak-mysql #POINTS TO MYSQL DATABASE
      DB_DATABASE: keycloakDb
      DB_USER: admin
      DB_PASSWORD: DbPassword
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: KeycloakPassword
    ports:
      - "8181:8080"
    volumes:
      - ./docker/keycloak/realms/:/opt/keycloak/data/import/ #mount realm-export.json to container
    depends_on:
      - keycloak-mysql

  loki:
    image: grafana/loki:main
    container_name: loki
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"

  prometheus:
    image: prom/prometheus:latest
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro #mount config inside container
    ports:
      - '9090:9090'

  tempo:
    image: grafana/tempo:latest
    command: [ '-config.file=/etc/tempo.yaml' ]
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yaml:ro #mount config inside container
      - ./docker/tempo/tempo-data:/tmp/tempo
    ports:
      - '3110:3100' # Tempo
      - '9411:9411' # zipkin

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./docker/grafana:/etc/grafana/provisioning/datasources:ro #mount config inside container
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - '3000:3000'

